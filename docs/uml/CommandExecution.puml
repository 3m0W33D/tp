@startuml
participant ":Terminus" as Terminus
participant ":MainCommandParser" as MainCommandParser
participant ":GoCommand" as GoCommand
participant  ":ModuleManager" as ModuleManger
participant ":ModuleWorkspaceCommandParser" as ModuleWorkspaceCommandParser
participant ":NoteCommand" as NoteCommand
participant ":NoteCommandParser" as NoteCommandParser
participant ":AddNoteCommand" as AddNoteCommand
autoactivate on
Terminus -> MainCommandParser: parseCommand(command)
  MainCommandParser -> GoCommand: parseArguments(arguments)
  return
return GoCommand
Terminus -> GoCommand: execute(ui, moduleManager)
   GoCommand -> ModuleManger: getModule(moduleName)
   return NusModule
   GoCommand -> ModuleWorkspaceCommandParser: setWorkspace(workspace)
   return
      alt if arguments != null
      GoCommand -> ModuleWorkspaceCommandParser:parseCommand(command)
      return NoteCommand
      GoCommand -> NoteCommand : execute(ui, moduleManager)
        alt if arguments != null
          NoteCommand -> NoteCommandParser: setModule(moduleName)
          return
          NoteCommand -> NoteCommandParser: parseCommand(arguments)
          return AddNoteCommand
          NoteCommand -> AddNoteCommand: setModule(moduleName)
          return
          NoteCommand -> AddNoteCommand: execute()
            create CommandResult
            AddNoteCommand -> CommandResult
          return CommandResult
        return CommandResult
        else else
          create CommandResult
          NoteCommand -> CommandResult
          return CommandResult
        end
      return CommandResult
      else else
        Create CommandResult
        GoCommand -> CommandResult
        return CommandResult
      end
return CommandResult





@enduml