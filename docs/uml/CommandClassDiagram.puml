@startuml

skinparam classAttributeIconSize 0
hide circle

"{abstract}\nCommand" ..> "1" CommandResult: returns >
"{abstract}\nCommand" ..> "1" ModuleManager: modifies
CommandResult ..> "0..1" "{abstract}\nCommandParser": contains >
"{abstract}\nCommandParser" -> "2..*" "{abstract}\nCommand": has >
XYZCommand --|> "{abstract}\nCommand"
!startsub COMMAND
abstract class "{abstract}\nCommand"  {
  # arguments: String
  - moduleName: String
  + {abstract} getFormat(): String
  + {abstract} getHelpMessage(): String
  + parseArguments(arguments: String): void
  + {abstract} execute(moduleManager: ModuleManager): CommandResult

}
!endsub

class XYZCommand {
  + execute(moduleManager: ModuleManager): CommandResult
  + getHelpMessage(): String
  + getFormat(): String
}

class CommandResult {

  # newCommandParser: CommandParser
  # hasChange: boolean
  # isExit: boolean
  # message: String[]
  # storageAction: StorageActionEnum
  # storageType: StorageTypeEnum
  # module: String
  + isExit(): boolean
  + getNewCommandParser(): CommandParser
  + getMessage(): String[]
  + getStorageAction(): StorageActionEnum
  + getStorageType(): StorageTypeEnum
}

!includesub Module.puml!MODULEMANAGER
!includesub ParserClassDiagram.puml!COMMANDPARSER
@enduml